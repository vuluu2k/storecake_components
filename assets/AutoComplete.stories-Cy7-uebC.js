import{a as j,w,u as z,h as c,l as R,_ as T,b as u,m as L}from"./default-CdC0NlhM.js";import{S as x,s as U}from"./index-B8umoAB3.js";import{f as W,I as X,D as y,c as N,d as q,e as H,A as J,m as Q,z as Y,o as E,r as Z}from"./iframe-CN81n6Lr.js";import{_ as ee}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{o as A}from"./omit-gu1bVkH6.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./Trigger-B_QLe5Jz.js";import"./Portal-DN2YZFZ2.js";import"./vnode-CfIXOZad.js";import"./KeyCode-CjcKJgc-.js";import"./SearchOutlined-DJcOuFz7.js";import"./pickAttrs-3LCMhbfy.js";import"./Overflow-CPqx_ddd.js";import"./index-fKlFU3KV.js";import"./DownOutlined-BKbNB-BS.js";import"./initDefaultProps-DWFTf1Id.js";import"./useState-oLMMiiBA.js";import"./FormItemContext-CkB2BJL-.js";var s=function(){return null};s.isSelectOption=!0;s.displayName="AAutoCompleteOption";var d=function(){return null};d.isSelectOptGroup=!0;d.displayName="AAutoCompleteOptGroup";function te(o){var e,a;return(o==null||(e=o.type)===null||e===void 0?void 0:e.isSelectOption)||(o==null||(a=o.type)===null||a===void 0?void 0:a.isSelectOptGroup)}var oe=function(){return u(u({},A(U(),["loading","mode","optionLabelProp","labelInValue"])),{},{dataSource:Array,dropdownMenuStyle:{type:Object,default:void 0},dropdownMatchSelectWidth:{type:[Number,Boolean],default:!0},prefixCls:String,showSearch:{type:Boolean,default:void 0},transitionName:String,choiceTransitionName:{type:String,default:"zoom"},autofocus:{type:Boolean,default:void 0},backfill:{type:Boolean,default:void 0},filterOption:{type:[Boolean,Function],default:!1},defaultActiveFirstOption:{type:Boolean,default:!0}})},k=W({compatConfig:{MODE:3},name:"AAutoComplete",inheritAttrs:!1,props:oe(),slots:["option"],setup:function(e,a){var n=a.slots,_=a.attrs,g=a.expose;w(!("dataSource"in n),"AutoComplete","`dataSource` slot is deprecated, please use props `options` instead."),w(!("options"in n),"AutoComplete","`options` slot is deprecated, please use props `options` instead.");var i=X(),F=function(){var t,p=L((t=n.default)===null||t===void 0?void 0:t.call(n)),m=p.length?p[0]:void 0;return m},P=function(){var t;(t=i.value)===null||t===void 0||t.focus()},I=function(){var t;(t=i.value)===null||t===void 0||t.blur()};g({focus:P,blur:I});var K=z("select",e),f=K.prefixCls;return function(){var r,t,p=e.size,m=e.dataSource,V=e.notFoundContent,D=V===void 0?(r=n.notFoundContent)===null||r===void 0?void 0:r.call(n):V,C,b=_.class,G=(t={},c(t,b,!!b),c(t,"".concat(f.value,"-lg"),p==="large"),c(t,"".concat(f.value,"-sm"),p==="small"),c(t,"".concat(f.value,"-show-search"),!0),c(t,"".concat(f.value,"-auto-complete"),!0),t);if(e.options===void 0){var S,O,h=((S=n.dataSource)===null||S===void 0?void 0:S.call(n))||((O=n.options)===null||O===void 0?void 0:O.call(n))||[];h.length&&te(h[0])?C=h:C=m?m.map(function(l){if(R(l))return l;switch(T(l)){case"string":return y(s,{key:l,value:l},{default:function(){return[l]}});case"object":return y(s,{key:l.value,value:l.value},{default:function(){return[l.text]}});default:throw new Error("AutoComplete[dataSource] only supports type `string[] | Object[]`.")}}):[]}var M=A(u(u(u({},e),_),{},{mode:x.SECRET_COMBOBOX_MODE_DO_NOT_USE,getInputElement:F,notFoundContent:D,class:G,ref:i}),["dataSource","loading"]);return y(x,M,u({default:function(){return[C]}},A(n,["default","dataSource","options"])))}}});const ne=j(k,{Option:s,OptGroup:d,install:function(e){return e.component(k.name,k),e.component(s.displayName,s),e.component(d.displayName,d),e}}),B={components:{AAutoComplete:ne},props:{options:{type:Array,default:()=>[]},sKey:{type:String,default:"key"},sValue:{type:String,default:"value"},title:{type:String,default:void 0}},setup(){return{}},computed:{optionsMark(){return this.options.map(e=>typeof e=="string"?{key:e,value:e,label:e,title:e}:{...e,value:e[this.sKey],label:e?.label||e[this.sValue],title:e?.title||e[this.sValue],show:this.sShow&&e?.[this.sShow]}).filter(e=>!e?.is_hidden)}}},ae={class:"select-design"},le={key:0,class:"text-select"};function se(o,e,a,n,_,g){const i=Y("a-auto-complete");return E(),N("div",ae,[a.title?(E(),N("div",le,H(a.title),1)):q("",!0),y(i,Q(o.$attrs,{options:g.optionsMark,class:"ant-select-design","dropdown-class-name":"ant-select-dropdown-design"}),{default:J(()=>[Z(o.$slots,"default")]),_:3},16,["options"])])}const re=ee(B,[["render",se]]);B.__docgenInfo={exportName:"default",displayName:"AutoComplete",description:"",tags:{},props:[{name:"options",type:{name:"array"},defaultValue:{func:!1,value:"[]"}},{name:"sKey",type:{name:"string"},defaultValue:{func:!1,value:"'key'"}},{name:"sValue",type:{name:"string"},defaultValue:{func:!1,value:"'value'"}},{name:"title",type:{name:"string"},defaultValue:{func:!1,value:"undefined"}}],slots:[{name:"default"}],sourceFiles:["/home/runner/work/storecake_components/storecake_components/src/components/AutoComplete.vue"]};const be={title:"Auto/AutoComplete",component:re,tags:["autodocs"],argTypes:{options:{control:"array",description:"Property options of the AutoComplete"},sKey:{control:"text",description:"Select a property of option is Key"},sValue:{control:"text",description:"Select a property of option is Value"},title:{control:"text",description:"Property title of the AutoComplete"}},args:{sKey:"key",sValue:"value"}},v={args:{options:[{key:"1",value:"Option 1"},{key:"2",value:"Option 2"},{key:"3",value:"Option 3"}],sKey:"key",sValue:"value"}};v.parameters={...v.parameters,docs:{...v.parameters?.docs,source:{originalSource:`{
  args: {
    "options": [{
      "key": "1",
      "value": "Option 1"
    }, {
      "key": "2",
      "value": "Option 2"
    }, {
      "key": "3",
      "value": "Option 3"
    }],
    "sKey": "key",
    "sValue": "value"
  }
}`,...v.parameters?.docs?.source}}};const we=["Default"];export{v as Default,we as __namedExportsOrder,be as default};
