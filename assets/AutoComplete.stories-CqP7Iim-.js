/* empty css                */import{S as w,s as D}from"./index-CaGOsB1j.js";import{d as z,k as R,E as y,c as x,e as T,u as L,z as U,m as W,y as X,o as E,r as q}from"./iframe-DT89xKeZ.js";import{_ as H}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{a as J,w as N,u as Q,h as c,l as Y,b as Z,_ as u,m as ee}from"./useConfigInject-DHqKs9mj.js";import{o as A}from"./omit-BBwAV8wK.js";import"./Trigger-D06_Jh-D.js";import"./Portal-DKvHnD0j.js";import"./raf-nDFcuFT6.js";import"./vnode-B40WGelV.js";import"./KeyCode-BcWn9RBx.js";import"./SearchOutlined-Cvi34QeD.js";import"./pickAttrs-DgQlsxbD.js";import"./Overflow-CdaNC9fJ.js";import"./index-BcSa5bTw.js";import"./isMobile-BPLVzUyJ.js";import"./initDefaultProps-Di2b5aHz.js";import"./useMemo-ZqGWGJ9v.js";import"./useState-BJ4bF47n.js";import"./DownOutlined-B8wMTtw3.js";import"./CheckOutlined-C9LFXnyC.js";import"./FormItemContext-ko0amEBu.js";import"./_commonjsHelpers-Cpj98o6Y.js";var r=function(){return null};r.isSelectOption=!0;r.displayName="AAutoCompleteOption";var d=function(){return null};d.isSelectOptGroup=!0;d.displayName="AAutoCompleteOptGroup";function te(o){var e,a;return(o==null||(e=o.type)===null||e===void 0?void 0:e.isSelectOption)||(o==null||(a=o.type)===null||a===void 0?void 0:a.isSelectOptGroup)}var oe=function(){return u(u({},A(D(),["loading","mode","optionLabelProp","labelInValue"])),{},{dataSource:Array,dropdownMenuStyle:{type:Object,default:void 0},dropdownMatchSelectWidth:{type:[Number,Boolean],default:!0},prefixCls:String,showSearch:{type:Boolean,default:void 0},transitionName:String,choiceTransitionName:{type:String,default:"zoom"},autofocus:{type:Boolean,default:void 0},backfill:{type:Boolean,default:void 0},filterOption:{type:[Boolean,Function],default:!1},defaultActiveFirstOption:{type:Boolean,default:!0}})},k=z({compatConfig:{MODE:3},name:"AAutoComplete",inheritAttrs:!1,props:oe(),slots:["option"],setup:function(e,a){var n=a.slots,_=a.attrs,g=a.expose;N(!("dataSource"in n),"AutoComplete","`dataSource` slot is deprecated, please use props `options` instead."),N(!("options"in n),"AutoComplete","`options` slot is deprecated, please use props `options` instead.");var i=R(),F=function(){var t,p=ee((t=n.default)===null||t===void 0?void 0:t.call(n)),m=p.length?p[0]:void 0;return m},P=function(){var t;(t=i.value)===null||t===void 0||t.focus()},K=function(){var t;(t=i.value)===null||t===void 0||t.blur()};g({focus:P,blur:K});var G=Q("select",e),f=G.prefixCls;return function(){var s,t,p=e.size,m=e.dataSource,V=e.notFoundContent,I=V===void 0?(s=n.notFoundContent)===null||s===void 0?void 0:s.call(n):V,C,b=_.class,M=(t={},c(t,b,!!b),c(t,"".concat(f.value,"-lg"),p==="large"),c(t,"".concat(f.value,"-sm"),p==="small"),c(t,"".concat(f.value,"-show-search"),!0),c(t,"".concat(f.value,"-auto-complete"),!0),t);if(e.options===void 0){var S,O,h=((S=n.dataSource)===null||S===void 0?void 0:S.call(n))||((O=n.options)===null||O===void 0?void 0:O.call(n))||[];h.length&&te(h[0])?C=h:C=m?m.map(function(l){if(Y(l))return l;switch(Z(l)){case"string":return y(r,{key:l,value:l},{default:function(){return[l]}});case"object":return y(r,{key:l.value,value:l.value},{default:function(){return[l.text]}});default:throw new Error("AutoComplete[dataSource] only supports type `string[] | Object[]`.")}}):[]}var $=A(u(u(u({},e),_),{},{mode:w.SECRET_COMBOBOX_MODE_DO_NOT_USE,getInputElement:F,notFoundContent:I,class:M,ref:i}),["dataSource","loading"]);return y(w,$,u({default:function(){return[C]}},A(n,["default","dataSource","options"])))}}});const ne=J(k,{Option:r,OptGroup:d,install:function(e){return e.component(k.name,k),e.component(r.displayName,r),e.component(d.displayName,d),e}}),B={components:{AAutoComplete:ne},props:{options:{type:Array,default:()=>[]},sKey:{type:String,default:"key"},sValue:{type:String,default:"value"},title:{type:String,default:void 0}},setup(){return{}},computed:{optionsMark(){return this.options.map(e=>typeof e=="string"?{key:e,value:e,label:e,title:e}:{...e,value:e[this.sKey],label:e?.label||e[this.sValue],title:e?.title||e[this.sValue],show:this.sShow&&e?.[this.sShow]}).filter(e=>!e?.is_hidden)}}},ae={class:"select-design"},le={key:0,class:"text-select"};function re(o,e,a,n,_,g){const i=X("a-auto-complete");return E(),x("div",ae,[a.title?(E(),x("div",le,L(a.title),1)):T("",!0),y(i,W(o.$attrs,{options:g.optionsMark,class:"ant-select-design","dropdown-class-name":"ant-select-dropdown-design"}),{default:U(()=>[q(o.$slots,"default")]),_:3},16,["options"])])}const se=H(B,[["render",re]]);B.__docgenInfo={exportName:"default",displayName:"AutoComplete",description:"",tags:{},props:[{name:"options",type:{name:"array"},defaultValue:{func:!1,value:"[]"}},{name:"sKey",type:{name:"string"},defaultValue:{func:!1,value:"'key'"}},{name:"sValue",type:{name:"string"},defaultValue:{func:!1,value:"'value'"}},{name:"title",type:{name:"string"},defaultValue:{func:!1,value:"undefined"}}],slots:[{name:"default"}],sourceFiles:["/home/runner/work/storecake_components/storecake_components/src/components/AutoComplete.vue"]};const Be={title:"Auto/AutoComplete",component:se,tags:["autodocs"],argTypes:{options:{control:"array",description:"Property options of the AutoComplete"},sKey:{control:"text",description:"Select a property of option is Key"},sValue:{control:"text",description:"Select a property of option is Value"},title:{control:"text",description:"Property title of the AutoComplete"}},args:{sKey:"key",sValue:"value"}},v={args:{options:[{key:"1",value:"Option 1"},{key:"2",value:"Option 2"},{key:"3",value:"Option 3"}],sKey:"key",sValue:"value"}};v.parameters={...v.parameters,docs:{...v.parameters?.docs,source:{originalSource:`{
  args: {
    "options": [{
      "key": "1",
      "value": "Option 1"
    }, {
      "key": "2",
      "value": "Option 2"
    }, {
      "key": "3",
      "value": "Option 3"
    }],
    "sKey": "key",
    "sValue": "value"
  }
}`,...v.parameters?.docs?.source}}};const Fe=["Default"];export{v as Default,Fe as __namedExportsOrder,Be as default};
